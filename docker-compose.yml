version: '3.8'

services:
  splinterlands-bot:
    build: 
      context: .
      dockerfile: Dockerfile-python
    container_name: splinterlands-bot-python
    restart: unless-stopped
    environment:
      - HEADLESS=true
      - CHROME_EXEC=/usr/bin/google-chrome-stable
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./screenshots:/app/screenshots
    networks:
      - bot-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; print('Bot is healthy')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: splinterlands-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bot-network

  # Optional: PostgreSQL for advanced data storage
  postgres:
    image: postgres:15-alpine
    container_name: splinterlands-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: splinterlands_bot
      POSTGRES_USER: botuser
      POSTGRES_PASSWORD: botpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - bot-network

  # Optional: Web dashboard for monitoring
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile-dashboard
    container_name: splinterlands-dashboard
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://botuser:botpass@postgres:5432/splinterlands_bot
    depends_on:
      - postgres
      - redis
    networks:
      - bot-network

volumes:
  redis_data:
  postgres_data:

networks:
  bot-network:
    driver: bridge